[[plugins]]
repo = 'Shougo/neomru.vim'
on_if = 1
on_source = ['unite.vim', 'denite.nvim']

[[plugins]]
repo = 'Shougo/neoyank.vim'
on_if = 1
on_event = 'TextYankPost'
on_source = ['unite.vim', 'denite.nvim']

[[plugins]]
repo = 'Shougo/denite.nvim'
depends = ['neomru.vim']
on_event = ['BufRead']
hook_add = '''
  nnoremap    [denite]   <Nop>
  nmap    <Leader>d [denite]
  nnoremap <silent> [denite]m :<C-u>Denite<Space>file_mru<Space>-start-filter<CR>
  nnoremap <silent> [denite]f :<C-u>DeniteProjectDir<Space>file/rec<Space>-path=`expand('%:p')`<Space>-start-filter<CR>
  nnoremap <silent> [denite]b :<C-u>Denite<Space>buffer<Space>-start-filter<CR>
  nnoremap <silent> [denite]d :<C-u>DeniteBufferDir<Space>file<Space>file:new<CR>
  nnoremap <silent> [denite]c :<C-u>Denite<Space>file<Space>file:new<CR>
  nnoremap <silent> [denite]g :<C-u>DeniteProjectDir<Space>grep:<Space>-buffer-name=search-buffer-denite<Space>-path=`expand('%:p')`<Space>-start-filter<CR>
  nnoremap <silent> [denite]r :<C-u>Denite<Space>-resume<Space>-buffer-name=search-buffer-denite<Space>-start-filter<CR>
  nnoremap <silent> [denite]y :<C-u>Denite<Space>neoyank<Space>-start-filter<CR>
  " Define mappings
  autocmd FileType denite call s:denite_my_settings()
  function! s:denite_my_settings() abort
    nnoremap <silent><buffer><expr> <CR>
    \ denite#do_map('do_action')
    "nnoremap <silent><buffer><expr> d
    "\ denite#do_map('do_action', 'delete')
    nnoremap <silent><buffer><expr> p
    \ denite#do_map('do_action', 'preview')
    nnoremap <silent><buffer><expr> q
    \ denite#do_map('quit')
    nnoremap <silent><buffer><expr> i
    \ denite#do_map('open_filter_buffer')
    nnoremap <silent><buffer><expr> <Space>
    \ denite#do_map('toggle_select').'j'
    nnoremap <silent><buffer><expr> <C-h>
    \ denite#do_map('move_up_path')
    nnoremap <silent><buffer><expr> <Tab>
    \ denite#do_map('choose_action')
    nnoremap <silent><buffer><expr> <C-o>
    \ denite#do_map('redraw')
    nnoremap <silent><buffer><expr> <Esc>
    \ denite#do_map('quit')
    nnoremap <silent><buffer><expr> a
    \ denite#do_map('open_filter_buffer')
    nnoremap <silent><buffer><expr> t
    \ denite#do_map('do_action', 'tabopen')
  endfunction

	autocmd FileType denite-filter call s:denite_filter_my_settings()
	function! s:denite_filter_my_settings() abort
	  nnoremap <silent><buffer> <C-o> <Plug>(denite_filter_update)
	  imap <silent><buffer> <C-o> <Plug>(denite_filter_update)
	endfunction
'''
hook_source = '''
  call denite#custom#var('grep', 'command', ['ag'])
  call denite#custom#var('grep', 'recursive_opts', [])
  call denite#custom#var('grep', 'final_opts', [])
  call denite#custom#var('grep', 'separator', [])
  call denite#custom#var('grep', 'default_opts', ['--nocolor', '--nogroup'])
  call denite#custom#var('grep', 'pattern_opt', [])
	call denite#custom#var('file/rec', 'command',
	\ ['ag', '--follow', '--nocolor', '--nogroup', '-g', ''])
	call denite#custom#var('directory_rec', 'command',
	\ ['ag', '--follow', '--nocolor', '--nogroup', '-g', ''])
'''

[[plugins]]
repo = 'Shougo/unite.vim'
depends = ['neomru.vim']
on_event = ['BufRead']
hook_add = '''
  " The prefix key.
  nnoremap    [unite]   <Nop>
  nmap    <Leader>f [unite]

  " unite.vim keymap
  let g:unite_enable_start_insert = 0
  nnoremap [unite]u  :<C-u>Unite -no-split<Space>
  nnoremap <silent> [unite]d :<C-u>Unite<Space>file<CR>
  nnoremap <silent> [unite]f :<C-u>Unite<Space>buffer<CR>
  nnoremap <silent> [unite]b :<C-u>Unite<Space>bookmark<CR>
  nnoremap <silent> [unite]m :<C-u>Unite<Space>file_mru<CR>
  nnoremap <silent> [unite]r :<C-u>UniteWithBufferDir file file/new -buffer-name=file<CR>
  nnoremap <silent> ,vr :UniteResume<CR>

  nnoremap <silent> [unite]p :<C-u>Unite<Space>history/yank -default-action=yank<CR>

  " unite-build map
  nnoremap <silent> ,vb :Unite build<CR>
  nnoremap <silent> ,vcb :Unite build:!<CR>
  nnoremap <silent> ,vch :UniteBuildClearHighlight<CR>

  " unite-grep
  let g:unite_source_grep_command = 'ag'
  let g:unite_source_grep_default_opts = '--nocolor --nogroup'
  let g:unite_source_grep_recursive_opt = ''
  let g:unite_source_grep_max_candidates = 200
'''

[[plugins]]
repo = 'thinca/vim-scouter'

[[plugins]]
repo = 'Shougo/vimfiler.vim'
depends = 'unite.vim'

# [[plugins]]
# repo = 'lvht/phpcd.vim'
# build = 'php7 /usr/local/bin/composer install'
# on_ft = 'php'
# hook_add = '''
# let g:deoplete#ignore_sources = get(g:, 'deoplete#ignore_sources', {})
# let g:deoplete#ignore_sources.php = ['omni']
# let g:phpcd_auto_restart = 1
# nnoremap <C-\> :<C-u>call phpcd#JumpToDefinition('split')<CR><C-w>T
# '''
# hook_post_source = '''
# let g:phpcd_php_cli_executable = 'php7'
# '''

[[plugins]]
repo = 'ternjs/tern_for_vim'
build = 'npm install'
on_ft = 'javascript'

[[plugins]]
repo = 'alvan/vim-closetag'
on_ft = ['html', 'vue']
hook_add = '''
  let g:closetag_filenames = '*.html,*.vue,*.twig'
'''

[[plugins]]
repo = 'Vimjas/vim-python-pep8-indent'
on_ft = 'python'

# lint
[[plugins]]
repo = 'w0rp/ale'
on_ft = ['php', 'python']
hook_add = '''
  let g:ale_lint_on_text_changed = 0
'''
