[[plugins]]
repo = 'Shougo/dein.vim'

[[plugins]]
repo = 'Shougo/vimproc.vim'
build = 'make'

[[plugins]]
repo = 'Shougo/neosnippet'
hook_add = '''
  imap <C-k> <Plug>(neosnippet_expand_or_jump)
  smap <C-k> <Plug>(neosnippet_expand_or_jump)
  xmap <C-k> <Plug>(neosnippet_expand_target)
  if has('conceal')
    set conceallevel=2 concealcursor=niv
  endif
  let g:neosnippet#snippets_directory='~/snippets/,' . g:dein_dir . '/repos/github.com/honza/vim-snippets/snippets/'
'''
on_i  = 1
on_ft = ['snippet']

[[plugins]]
repo = 'Shougo/neosnippet-snippets'
depends = ['neosnippet']

[[plugins]]
repo = 'honza/vim-snippets'

[[plugins]]
repo = 'vim-scripts/sudo.vim'

[[plugins]]
repo = 'thinca/vim-quickrun'
hook_add = '''
nnoremap <Leader>qa :QuickRun -args
let g:quickrun_config = {}
let g:quickrun_config = {
      \   "_":{
      \     'runner': 'vimproc',
      \     'runner/vimproc/updatetime' : 100
      \   },
      \   "python":{"command": "python"}
      \ }
let g:quickrun_config.python = get(g:, 'quickrun_config.python', {})
let g:quickrun_config.python.command = 'python'
'''

[[plugins]]
repo =  'itchyny/calendar.vim'

#[[plugins]]
#repo = 'https://github.com/kmnk/vim-unite-giti.git'

[[plugins]]
repo = 'junegunn/vim-easy-align'
hook_add = '''
vmap <Enter> <Plug>(EasyAlign)
'''

[[plugins]]
repo = 'tpope/vim-surround'

[[plugins]]
repo = 'clausreinke/typescript-tools.vim'

[[plugins]]
repo = 'Shougo/neossh.vim'

[[plugins]]
repo = 'kana/vim-filetype-haskell'

[[plugins]]
repo = 'posva/vim-vue'

[[plugins]]
repo = 'eagletmt/ghcmod-vim'

[[plugins]]
repo = 'hashivim/vim-terraform'

[[plugins]]
repo = 'thinca/vim-ref'
hook_add = '''
  let g:ref_phpmanual_path = $HOME . '/.config/nvim/ref/php-chunked-xhtml'
'''

[[plugins]]
repo = 'Shougo/vimshell'
hook_add = '''
  nnoremap <Leader>s :VimShell<CR>
'''

[[plugins]]
repo = 'ujihisa/vimshell-ssh'
depends = ['Shougo/vimshell']

[[plugins]]
repo = 'Shougo/deol.nvim'
if   = ''' has('nvim')'''

[[plugins]]
repo = 'Shougo/deoplete.nvim'
hook_add = '''
  let g:deoplete#enable_at_startup = 1
'''
on_i = 1
if   = ''' has('nvim')'''

[[plugins]]
repo = 'Shougo/neocomplete'
hook_add = '''
  let g:neocomplete#enable_at_startup = 1
'''
on_i = 1
if   = '''! has('nvim')'''

[[plugins]]
repo = 'cespare/vim-toml'

[[plugins]]
repo = 'evidens/vim-twig'

[[plugins]]
repo = 'osyo-manga/vim-precious'
depends = ['Shougo/context_filetype.vim']
hook_add = '''
let g:context_filetype#search_offset = 500
'''

[[plugins]]
repo = 'Shougo/context_filetype.vim'

#[[plugins]]
#repo = 'Shougo/neoinclude.vim'
#depneds = ['deoplete.vim']

[[plugins]]
repo = 'tsukkee/unite-tag'
#depneds = ['unite.vim', 'neoinclude.vim']
depneds = ['unite.vim']

[[plugins]]
repo = 'mhinz/vim-signify'
hook_add = '''
  let g:signify_vcs_list = [ 'git', 'svn' ]
'''

[[plugins]]
repo = 'tpope/vim-fugitive'
hook_add = '''
nnoremap [fugitive]  <Nop>
nmap <space>g [fugitive]
nnoremap <silent> [fugitive]s :Gstatus<CR><C-w>T
nnoremap <silent> [fugitive]a :Gwrite<CR>
nnoremap <silent> [fugitive]c :Gcommit-v<CR>
nnoremap <silent> [fugitive]b :Gblame<CR>
nnoremap <silent> [fugitive]d :Gdiff<CR>
nnoremap <silent> [fugitive]m :Gmerge<CR>
'''

# 閉じ括弧を自動で補完
[[plugins]]
repo = 'cohama/lexima.vim'

[[plugins]]
repo = 'itchyny/lightline.vim'

[[plugins]]
repo = 'martinda/Jenkinsfile-vim-syntax'

# [[plugins]]
# repo = 'fatih/vim-go'

[[plugins]]
repo = 'Shougo/defx.nvim'
hook_add = '''
nnoremap <Leader>xd :<C-u>Defx `expand('%:p:h')` -search=`expand('%:p')`<CR>
nnoremap <Leader>xc :<C-u>Defx<CR>

autocmd FileType defx call s:defx_my_settings()
function! s:defx_my_settings() abort
  " Define mappings
  nnoremap <silent><buffer><expr> <CR>
  \ defx#do_action('open')
  nnoremap <silent><buffer><expr> c
  \ defx#do_action('copy')
  nnoremap <silent><buffer><expr> m
  \ defx#do_action('move')
  nnoremap <silent><buffer><expr> p
  \ defx#do_action('paste')
  nnoremap <silent><buffer><expr> l
  \ defx#do_action('open')
  nnoremap <silent><buffer><expr> E
  \ defx#do_action('open', 'vsplit')
  nnoremap <silent><buffer><expr> P
  \ defx#do_action('open', 'pedit')
  nnoremap <silent><buffer><expr> K
  \ defx#do_action('new_directory')
  nnoremap <silent><buffer><expr> N
  \ defx#do_action('new_file')
  nnoremap <silent><buffer><expr> M
  \ defx#do_action('new_multiple_files')
  nnoremap <silent><buffer><expr> d
  \ defx#do_action('remove')
  nnoremap <silent><buffer><expr> r
  \ defx#do_action('rename')
  nnoremap <silent><buffer><expr> !
  \ defx#do_action('execute_command')
  nnoremap <silent><buffer><expr> x
  \ defx#do_action('execute_system')
  nnoremap <silent><buffer><expr> yy
  \ defx#do_action('yank_path')
  nnoremap <silent><buffer><expr> .
  \ defx#do_action('toggle_ignored_files')
  nnoremap <silent><buffer><expr> ;
  \ defx#do_action('repeat')
  nnoremap <silent><buffer><expr> h
  \ defx#do_action('cd', ['..'])
  nnoremap <silent><buffer><expr> ~
  \ defx#do_action('cd')
  nnoremap <silent><buffer><expr> q
  \ defx#do_action('quit')
  nnoremap <silent><buffer><expr> <Space>
  \ defx#do_action('toggle_select') . 'j'
  nnoremap <silent><buffer><expr> *
  \ defx#do_action('toggle_select_all')
  nnoremap <silent><buffer><expr> j
  \ line('.') == line('$') ? 'gg' : 'j'
  nnoremap <silent><buffer><expr> k
  \ line('.') == 1 ? 'G' : 'k'
  nnoremap <silent><buffer><expr> <C-l>
  \ defx#do_action('redraw')
  nnoremap <silent><buffer><expr> <C-g>
  \ defx#do_action('print')
  nnoremap <silent><buffer><expr> cd
  \ defx#do_action('change_vim_cwd')
endfunction
'''

[[plugins]]
repo = 'prabirshrestha/async.vim'

[[plugins]]
repo = 'prabirshrestha/vim-lsp'
hook_add = '''
let g:lsp_diagnostics_enabled = 0
" debug
let g:lsp_log_verbose = 1
let g:lsp_log_file = expand('~/log/vim-lsp.log')
let g:asyncomplete_log_file = expand('~/log/asyncomplete.log')
if executable('pyls')
  au User lsp_setup call lsp#register_server({
        \ 'name': 'pyls',
        \ 'cmd': {server_info->['pyls']},
        \ 'whitelist': ['python'],
        \ })
endif
nnoremap <silent> K :LspHover<CR>
nnoremap <silent> <C-]> :LspDefinition<CR>
'''

[[plugins]]
repo = 'mattn/vim-lsp-settings'

[[plugins]]
repo = 'prabirshrestha/asyncomplete.vim'

[[plugins]]
repo = 'prabirshrestha/asyncomplete-lsp.vim'

[[plugins]]
repo = 'lambdalisue/vim-pyenv'
depends = ['vim-lsp']


[[plugins]]
repo = 'tpope/vim-commentary'

# lspの補完も重くなるので無効に
# [[plugins]]
# repo = 'tbodt/deoplete-tabnine'
# build = './install.sh'
